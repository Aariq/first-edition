pb_z(1,m.par.true);
rc <- function(z1) c_z1z(z1,1,520,m.par.true) #
integrate(rc,-6,0.5)
integrate(rc,-Inf,0.5)
rc <- function(z1) c_z1z(z1,1,520,m.par.true) #
integrate(rc,-Inf,0.5)
520/413;
m.par.true["grow.int"]/(1-m.par.true["grow.z"])+3*m.par.true["grow.sd"]
m.par.true["grow.int"]/(1-m.par.true["grow.z"])+3*m.par.true["grow.sd"] + 0.2
s_z(0,0,m.par.true)
s_z(-1,0,m.par.true)
s_z(-0.5,0,m.par.true)
p_r
pr_z
pr_z(512);
pr_z(512,m.par.true);
pr_z(520,m.par.true);
pb_z(1,512,m.par.true);
pb_z(1,m.par.true);
pb_z(2,m.par.true);
f <- function(z) pb_z(2,m.par.true);
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.65,m.par.true) #
integrate(z1Dist,3.65,Inf)
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.8,m.par.true) #
integrate(z1Dist,3.8,10)
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.65,m.par.true) #
integrate(z1Dist,3.85,Inf)
integrate(z1Dist,3.8,Inf)
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.8,m.par.true) #
integrate(z1Dist,3.8,Inf)
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.75,m.par.true) #
integrate(z1Dist,3.75,Inf)
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
set_graph_pars("panel2"); #
par(mfrow=c(2,1))#
par(pty="m",mar=c(4,4,1,4))#
#
zMum <- 2.9;  #
Nvals <- seq(146,413,length=100); #
#
svals <- s_z(zMum,Nvals,m.par.true)#
prvals <- pr_z(Nvals,m.par.true);#
z0vals <- m.par.true["rcsz.int"] + m.par.true["rcsz.Nt"] * Nvals + m.par.true["rcsz.z"] *zMum#
z0vals <- exp(z0vals)*exp(-0.5*m.par.true["rcsz.sd"]^2);#
#
matplot(Nvals,cbind(svals,prvals),type="l",lty=c(1,2),col="black",lwd=2,xlim=c(146,430),#
     xlab="", ylab="Probability");#
legend("bottomleft",legend=c("Adult survival","Recruitment probability","Offspring mass"),lty=c(1,2,3),#
    col=c("black","black","blue"),bty="n",lwd=c(2,2,3))#
par(new=TRUE)#
plot(Nvals, z0vals,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(146,430),#
     ylim=c(9,13),lwd=3,lty=3)#
axis(side=4,at=c(8:14))#
mtext("Offspring mean mass(kg)",side=4,line=-1.5)     #
#
add_panel_label("a")#
pb_z(1,m.par.true);#
rc <- function(z1) c_z1z(z1,1,520,m.par.true) #
integrate(rc,-Inf,0.5)  #
z.max <- m.par.true["grow.int"]/(1-m.par.true["grow.z"])+3*m.par.true["grow.sd"]#
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.65,m.par.true) #
integrate(z1Dist,3.65,Inf) #
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.8,m.par.true) #
integrate(z1Dist,3.8,Inf) #
L <- 0.5; U <- 3.8; #
m <- 165; #
lamFun <- function(Nt) {#
    IPM.dd <- mk_K(Nt, m, m.par.true, L=L, U=U)#
    return(Re(eigen(IPM.dd$K)$val[1]))#
}#
densVals <- seq(146, 416, length=100)#
lamVals <- sapply(densVals,lamFun) #
plot(densVals, lamVals, xlab="Number of Females N", #
ylab=expression(paste("Population growth rate ",lambda)),type="l")#
abline(h=1,lty=2)#
Nbar <- uniroot(function(N) lamFun(N)-1, lower=200,upper=400)$root#
points(Nbar,1,type="p",pch=16,cex=1.5)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/SoayDDFuns.eps")#
IPM.dd <- mk_K(Nt=50, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
n0 <- Re(eigen(IPM.dd$K)$vectors[,1]); #
n0 = 50*n0/sum(h*n0); #
Ntvals <- numeric(21); Ntvals[1] <- sum(h*n0);#
ntmat <- matrix(0,m,21); ntmat[,1] <- n0; #
for(k in 2:21) {#
	IPM.dd <- mk_K(Nt=Ntvals[k-1], m=m, m.par=m.par.true, L=L,U=U)#
	ntmat[,k] <- IPM.dd$K%*%ntmat[,k-1]#
	Ntvals[k] <- h*sum(ntmat[,k])#
}#
set_graph_pars("panel4")#
matplot(meshpts,ntmat[,c(1,6,11,16,21)],type="l",xlab="Size z", ylab="Size distribution n(z,t)",#
col=grey(1-1:6/6),lty=1)#
legend("topleft",legend=as.character(c(1,6,11,16,21)-1),lty=1,col=grey(1-1:6/6),bty="n") #
add_panel_label("a")#
nbar <- ntmat[,21]#
for(k in 1:25) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
dvals <- numeric(21); #
for(j in 1:21) dvals[j] <- h*sum(abs(ntmat[,j]-nbar)) #
#
dhat <- abs(lam_J)^c(0:20); dhat <- dhat*dvals[21]/dhat[21]; #
#
dhat[1:7] <- NA; #
plot(0:20,log(dvals),type="p",xlab="Year t", ylab="ln(Distance from equilibrium)");#
points(0:20,-0.35+log(dhat),type="l",lty=2,lwd=2)#
add_panel_label("b")#
#
nreps<-10; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	nt <- runif(m)#
    nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
add_panel_label("c")#
#
nreps<-10; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayDDStabilityAnalysis.eps")
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
eigen(J)$values[2]
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 165; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z#
                + rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt + rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
rho <- 0.2; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
rho <- 0.1; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n") #
#
rhovals <- seq(0,0.2,length=21); #
Revals <- Imvals <- numeric(21);#
Revals[1] <- Re(lam_J); Imvals[1] <- Im(lam_J)#
for(j in 2:21) {#
	rho <- rhovals[j]#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values[1]; cat(j, lam_J,"\n") #
    Revals[j] <- Re(lam_J); Imvals[j] <- Im(lam_J)#
}
plot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part")
Nbar;
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- numeric(51);#
Revals[1] <- Re(lam_J); Imvals[1] <- Im(lam_J)#
for(j in 2:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values[1]; cat(j, lam_J,"\n") #
    Revals[j] <- Re(lam_J); Imvals[j] <- Im(lam_J)#
} #
plot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part")
Revals
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- numeric(51);#
Revals[1] <- Re(lam_J); Imvals[1] <- Im(lam_J)#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values[1]; cat(j, lam_J,"\n") #
    Revals[j] <- Re(lam_J); Imvals[j] <- Im(lam_J)#
} #
plot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- numeric(51);#
Revals[1] <- Re(lam_J); Imvals[1] <- Im(lam_J)#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values[1]; cat(j, lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j] <- Re(lam_J); Imvals[j] <- Im(lam_J)#
} #
plot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- matrix(0,51,2);#
Revals[1,] <- Re(lam_J[1:2]); Imvals[1,] <- Im(lam_J[1:2])
Revals[1,]
lam_J[1:2]
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- matrix(0,51,2);#
Revals[1,] <- Re(lam_J[1:2]); Imvals[1,] <- Im(lam_J[1:2])#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values[1]; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:2]); Imvals[j,] <- Im(lam_J[1:2])#
} #
plot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part",col="black",lty=c(1,2))
matplot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part",col="black",lty=c(1,2))
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- matrix(0,51,2);#
Revals[1,] <- Re(lam_J[1:2]); Imvals[1,] <- Im(lam_J[1:2])#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:2]); Imvals[j,] <- Im(lam_J[1:2])#
} #
matplot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part",col="black",lty=c(1,2))
rhovals <- seq(0,0.2,length=51); #
Revals <- Imvals <- matrix(0,51,3);#
Revals[1,] <- Re(lam_J[1:3]); Imvals[1,] <- Im(lam_J[1:3])#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:3]); Imvals[j,] <- Im(lam_J[1:3])#
} #
matplot(Revals,Imvals,type="o",xlab="Real part",ylab="Imaginary part",col="black",lty=c(1,2))
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n")
lam_J[1:5]
matplot(Revals,Imvals,type="p",xlab="Real part",ylab="Imaginary part",col="black",lty=c(1,2))
matplot(Revals,Imvals,type="p",xlab="Real part",ylab="Imaginary part",col="black",#
lty=c(1,2),pch=16)
matplot(Revals,Imvals,type="p",xlab="Real part",ylab="Imaginary part",col="black",#
lty=c(1,2),pch=c(letters,LETTERS))
rhovals <- seq(0,0.1,length=51); #
Revals <- Imvals <- matrix(0,51,3);#
Revals[1,] <- Re(lam_J[1:3]); Imvals[1,] <- Im(lam_J[1:3])#
for(j in 1:51) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:3]); Imvals[j,] <- Im(lam_J[1:3])#
} #
matplot(Revals,Imvals,type="p",xlab="Real part",ylab="Imaginary part",col="black",#
lty=c(1,2),pch=c(letters,LETTERS))
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=9); #
Revals <- Imvals <- matrix(0,51,3);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:9) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
par(mfrow=c(3,3))#
for(j in 1:9) plot(Revals[j,],Imvals[j,],xlim=c(-1,1),ylim=c(-1,1),pch=16,type="p")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=9); #
Revals <- Imvals <- matrix(0,9,3);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:9) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
par(mfrow=c(3,3))#
for(j in 1:9) plot(Revals[j,],Imvals[j,],xlim=c(-1,1),ylim=c(-1,1),pch=16,type="p")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=9); #
Revals <- Imvals <- matrix(0,9,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:9) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
par(mfrow=c(3,3))#
for(j in 1:9) plot(Revals[j,],Imvals[j,],xlim=c(-1,1),ylim=c(-1,1),pch=16,type="p")
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=9); #
Revals <- Imvals <- matrix(0,9,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:9) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
par(mfrow=c(3,3))#
for(j in 1:9) plot(Revals[j,],Imvals[j,],xlim=c(-2,2),ylim=c(-2,2),pch=16,type="p")
v=sqrt(-1)
v<-complex(1,1)
v
abs(v)
?complex
v=complex(real=1,im=1)
v
abs(v)
v=1:12;
min(which(v>6))
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 165; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z + rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt + rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=21); #
lamvals <- matrix(0,21,2)#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- sort(unique(abs(lam_J))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lam_J[a2];#
} #
matplot(rhovals,abs(lamvals))
rhovals <- seq(0,0.2,length=21); #
lamvals <- matrix(0,21,2)#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lam_J[a2];#
} #
matplot(rhovals,abs(lamvals))
lamsort[1];
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 165; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z + rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt + rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}
rhovals <- seq(0,0.2,length=21); #
lamvals <- matrix(0,21,2)#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
} #
matplot(rhovals,abs(lamvals))
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 165;
mk_J
Nbar
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.2,length=21); #
lamvals <- matrix(0,21,2)#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
} #
matplot(rhovals,abs(lamvals))
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.02,length=21); #
lamvals <- matrix(0,21,2)#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
} #
matplot(rhovals,abs(lamvals))
lamvals
lamsort(1:5)
lamsort[1:5]
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.02,length=21); #
lamvals <- matrix(0,21,2)#
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
     Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,abs(lamvals))
Revals
Imvals
rhovals <- seq(0,0.05,length=21); #
lamvals <- matrix(0,21,2)#
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
     Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,abs(lamvals))
Revals
Imvals
L <- 0.5; U <- 3.8; m <- 250; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.05,length=21); #
lamvals <- matrix(0,21,2)#
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
     Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,abs(lamvals))
Revals
Imvals
L <- 0.5; U <- 3.8; m <- 250; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)
Nbar
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 250; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
#
rhovals <- seq(0,0.02,length=21); #
lamvals <- matrix(0,21,2)#
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    lamsort <- rev(sort(unique(abs(lam_J)))); #
    a1 <- min(which(abs(lam_J)==lamsort[1]))#
    lamvals[j,1] <- lam_J[a1]; #
    a2 <- min(which(abs(lam_J)==lamsort[2]))#
    lamvals[j,2] <- lamsort[a2];#
     Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,abs(lamvals))
Revals
Imvals
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,Revals,type="l",lty=1);
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
matplot(rhovals,Revals[1:3],type="l",lty=1);
matplot(rhovals,Revals[,1:3],type="l",lty=1);
lam3 <- apply(Revals[,1:3],1,sort); #
matplot(rhovals,lam3,type="l",lty=1);
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1);
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black");#
for(j in 1:21) {#
	lamj <- lam3[,j];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lam3[imax])#
}
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black");#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lam3[imax])#
}
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black");#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
}
Revals
abline(h=-1)
abline(h=-1,lty=2)
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black");#
abline(h=1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
}
objects()
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")
rho <- 0.008; #
nreps<-10; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	nt <- runif(m) #
    nt <- N0[j]*nt/sum(h*nt) #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt  #
	   Ntvals[k,j] <- sum(h*nt) #
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
add_panel_label("b")
rho <- 0.008; #
nreps<-10; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	nt <- runif(m) #
    nt <- N0[j]*nt/sum(h*nt) #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt  #
	   Ntvals[k,j] <- sum(h*nt) #
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
add_panel_label("b")#
#
nreps<-10; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
add_panel_label("d")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 250; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.008; #
nreps<-5; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
rho <- 0.012; #
nreps<-5; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")
rho <- 0.02; #
nreps<-5; N0<-seq(50,450,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 250; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.008; #
nreps<-5; N0<-seq(100,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
rho <- 0.02; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.008; #
nreps<-5; N0<-seq(100,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
rho <- 0.02; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
h;
rhovals <- seq(0.005,0.05,length=50); #
for(j in 1:50) {#
    Ntvals<-matrix(NA,50,1000)#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".")
Ntvals
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.005,0.05,length=50); #
for(j in 1:50) {#
	rho <- rhovals[j]; #
    Ntvals<-matrix(NA,50,100)#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:100) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}
Ntvals
rhovals <- seq(0.005,0.05,length=50); #
Ntvals<-matrix(NA,50,100)#
for(j in 1:50) {#
	rho <- rhovals[j]; #
#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:100) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}
matplot(rhovals,Ntvals[,51:100],type="p",pch=".")
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.005,0.05,length=50); #
Ntvals<-matrix(NA,50,1000)#
for(j in 1:50) {#
	rho <- rhovals[j]; #
#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".")
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.005,0.05,length=50); #
Ntvals<-matrix(NA,50,1000)#
for(j in 1:50) {#
	rho <- rhovals[j]; #
#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".",col="black")
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.005,0.03,length=100); #
Ntvals<-matrix(NA,50,1000)#
for(j in 1:50) {#
	rho <- rhovals[j]; #
#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".",col="black")
graphics.off()
matplot(rhovals[1:50],Ntvals[,501:1000],type="p",pch=".",col="black")
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.008,0.03,length=100); #
Ntvals<-matrix(NA,100,1000)#
for(j in 1:100) {#
	rho <- rhovals[j]; #
#
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".",col="black")
3.3/0.04;
3.3/0.03;
rhovals <- seq(0.008,0.03,length=200); #
Ntvals<-matrix(NA,200,1000);#
m <- 50 #
for(j in 1:200) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".",col="black")
matplot(rhovals,Ntvals[,501:1000],type="p",pch=".",col="black",xlab="Steepness parameter rho",#
ylab="Total population")
dim(Ntvals)
matplot(rhovals,Ntvals[,751:1000],type="p",pch=".",col="black",xlab="Steepness parameter rho",#
ylab="Total population")
dev.new();#
set_graph_pars("panel1")#
#
rhovals <- seq(0.008,0.03,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
#
matplot(rhovals,Ntvals[,751:1000],type="p",pch=".",col="black",xlab="Steepness parameter rho",#
ylab="Total population")
?save
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")
load(file="Ntvals.Rdata")#
matplot(rhovals,Ntvals[,751:1000],type="p",pch=".",col="black",xlab=#
expression(paste("Steepness parameter", rho)),#
ylab="Total population")
load(file="Ntvals.Rdata")#
matplot(rhovals,Ntvals[,751:1000],type="p",pch=".",col="black",xlab=#
expression(paste("Steepness parameter ", rho)),#
ylab="Total population")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.008; #
nreps<-5; N0<-seq(100,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
rho <- 0.02; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.009; #
nreps<-5; N0<-seq(100,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
rho <- 0.02; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.009; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.008")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
rho <- 0.02; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.02")#
add_panel_label("d")
m;
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.009; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.009")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
if(FALSE) {#
rhovals <- seq(0.008,0.03,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
#
load(file="Ntvals.Rdata")#
matplot(rhovals,Ntvals[,751:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
s_z <- function(z, Nt, m.par) {#
    linear.p <- m.par["surv.int"] + m.par["surv.Nt"] * Nt + m.par["surv.z"] * z - rho*(Nt-Nbar) #
    1/(1+exp(-linear.p))                                                 #
}#
#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.009; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.009")#
add_panel_label("b")#
#
rho <- 0.012; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")#
#
if(FALSE) {#
rhovals <- seq(0.008,0.03,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
#
load(file="Ntvals.Rdata")#
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
plot(Ntvals[900:999],Ntvals[901:1000])
plot(Ntvals[50,900:999],Ntvals[50,901:1000])
load(file="Ntvals.Rdata")#
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")
rhovals
dim(Ntvals)
plot(Ntvals[385,900:999],Ntvals[385,901:1000])
abline(0,1)
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n")
rhovals <- seq(0,0.02,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals;
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals;
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")
rhovals
abline(v=0.05)
abline(v=0.04)
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.009")#
add_panel_label("b")
rho <- 0.045; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.009")#
add_panel_label("b")
rho <- 0.06; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")
rho <- 0.07; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.012")#
add_panel_label("c")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.04")#
add_panel_label("b")#
#
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.08")#
add_panel_label("c")
if(TRUE) {#
rhovals <- seq(0.03,0.2,length=100); #
Ntvals<-matrix(NA,100,1000);#
m <- 50 #
for(j in 1:100) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals2.Rdata")#
} #
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")
dim(Ntvals)
plot(Ntvals[100,500:999],Ntvals[100,501:1000])
z <- Ntvals[100,500:999]; sum(z<1+min(z))
z <- Ntvals[100,500:999]; sum(z>1+max(z-1))
z <- Ntvals[100,500:999]; sum(z>max(z)-1)
if(TRUE) {#
rhovals <- seq(0.03,0.3,length=250); #
Ntvals<-matrix(NA,250,1000);#
m <- 50 #
for(j in 1:250) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals2.Rdata")#
} #
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.04")#
add_panel_label("b")#
#
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.08")#
add_panel_label("c")#
#
if(TRUE) {#
rhovals <- seq(0.03,0.25,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.04")#
add_panel_label("b")#
#
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.08")#
add_panel_label("c")#
#
if(FALSE) { #
rhovals <- seq(0.03,0.25,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
#
load(file="Ntvals.Rdata");#
#
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")
rhovals
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Ntvals<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Ntvals[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Ntvals[k] <- sum(h*nt)#
	ntvals[1,] <- nt; #
	cat(k,"\n")#
}
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[1,] <- nt; #
	cat(k,"\n")#
}
plot(Nt[800:999],Nt[801:1000],cex=0.8,xlab="Total number of females, t", ylab="Total number of females, t+1")
plot(Nt[500:999],Nt[501:1000],cex=0.6,xlab="Total number of females, t", ylab="Total number of females, t+1")
plot(Nt[500:999],Nt[501:1000],cex=0.3,xlab="Total number of females, t", ylab="Total number of females, t+1")
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")
plot(Nt[750:999],Nt[751:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(2000); ntvals<-matrix(NA,2000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:2000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[1,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[1500:1999],Nt[1501:2000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
Nt<-Nt[501:1000]; ntvals<-ntvals[501:1000,]
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1)<1))
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)
imin
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)
imin
imax
min(Nt1)
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)
Nt
imin
imax
imean
for(j in 1:500) nt1[,j] <- nt1[,j]/sum(h*nt1[,j]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt[imin,]), type="l",xlim=c(L,U))
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(L,U))
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(2,U),col="black")#
matplot(meshpts,t(nt1[imax,]), type="l",xlim=c(2,U),col="red")#
matplot(meshpts,t(nt1[imean,]), type="l",xlim=c(2,U),col="blue")
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1,U),col="black")#
matplot(meshpts,t(nt1[imax,]), type="l",xlim=c(1,U),col="red")#
matplot(meshpts,t(nt1[imean,]), type="l",xlim=c(1,U),col="blue")
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1,U),col="black")#
matpoints(meshpts,t(nt1[imax,]), type="l",xlim=c(1,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",xlim=c(1,U),col="blue")
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.5,U),col="black")#
matpoints(meshpts,t(nt1[imax,]), type="l",xlim=c(1.5,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",xlim=c(1.5,U),col="blue")
imin
length(imin)
length(imax)
length(imean)
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.5,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.5,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.5,U),col="blue")
length(imin)
length(imax)
length(imean)
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.5,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.5,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.5,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"))
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"))
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
#
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.04")#
add_panel_label("b")#
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.08")#
add_panel_label("c")#
if(FALSE) { #
rhovals <- seq(0.03,0.25,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
load(file="Ntvals.Rdata");#
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")#
set_graph_pars("panel2"); dev.new(width=8,height=5)#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
dev.new(width=8,height=5)#
set_graph_pars("panel2"); #
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
dev.new(width=8,height=4)#
set_graph_pars("panel2"); #
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
dev.new(width=8,height=4)#
set_graph_pars("panel2"); #
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue",lwd=2)#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
graphics.off(); #
dev.new(width=8,height=4)#
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
graphics.off(); #
dev.new(width=8,height=4)#
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
par(yaxs="i")#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
set_graph_pars("panel2"); #
par(mfrow=c(2,1),cex.lab=1.35)#
par(pty="m",mar=c(4,4,1,4))#
#
zMum <- 2.9;  #
Nvals <- seq(146,413,length=100); #
#
svals <- s_z(zMum,Nvals,m.par.true)#
prvals <- pr_z(Nvals,m.par.true);#
z0vals <- m.par.true["rcsz.int"] + m.par.true["rcsz.Nt"] * Nvals + m.par.true["rcsz.z"] *zMum#
z0vals <- exp(z0vals)*exp(-0.5*m.par.true["rcsz.sd"]^2);#
#
matplot(Nvals,cbind(svals,prvals),type="l",lty=c(1,2),col="black",lwd=2,xlim=c(146,430),#
     xlab="", ylab="Probability");#
legend("bottomleft",legend=c("Adult survival","Recruitment probability","Offspring mass"),lty=c(1,2,3),#
    col=c("black","black","blue"),bty="n",lwd=c(2,2,3))#
par(new=TRUE)#
plot(Nvals, z0vals,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(146,430),#
     ylim=c(9,13),lwd=3,lty=3)#
axis(side=4,at=c(8:14))#
mtext("Offspring mean mass(kg)",side=4,line=-1.5)     #
#
add_panel_label("a")#
pb_z(1,m.par.true);#
rc <- function(z1) c_z1z(z1,1,520,m.par.true) #
integrate(rc,-Inf,0.5)  #
z.max <- m.par.true["grow.int"]/(1-m.par.true["grow.z"])+3*m.par.true["grow.sd"]#
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.65,m.par.true) #
integrate(z1Dist,3.65,Inf) #
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.8,m.par.true) #
integrate(z1Dist,3.8,Inf) #
#
L <- 0.5; U <- 3.8; #
m <- 165; #
lamFun <- function(Nt) {#
    IPM.dd <- mk_K(Nt, m, m.par.true, L=L, U=U)#
    return(Re(eigen(IPM.dd$K)$val[1]))#
}#
#
densVals <- seq(146, 416, length=100)#
lamVals <- sapply(densVals,lamFun) #
plot(densVals, lamVals, xlab="Number of Females N", #
ylab=expression(paste("Population growth rate ",lambda)),type="l")#
abline(h=1,lty=2)#
Nbar <- uniroot(function(N) lamFun(N)-1, lower=200,upper=400)$root#
points(Nbar,1,type="p",pch=16,cex=1.5)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/SoayDDFuns.eps")
etwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
set_graph_pars("panel2"); #
par(mfrow=c(2,1),cex.lab=1.25)#
par(pty="m",mar=c(4,4,1,4))#
#
zMum <- 2.9;  #
Nvals <- seq(146,413,length=100); #
#
svals <- s_z(zMum,Nvals,m.par.true)#
prvals <- pr_z(Nvals,m.par.true);#
z0vals <- m.par.true["rcsz.int"] + m.par.true["rcsz.Nt"] * Nvals + m.par.true["rcsz.z"] *zMum#
z0vals <- exp(z0vals)*exp(-0.5*m.par.true["rcsz.sd"]^2);#
#
matplot(Nvals,cbind(svals,prvals),type="l",lty=c(1,2),col="black",lwd=2,xlim=c(146,430),#
     xlab="", ylab="Probability");#
legend("bottomleft",legend=c("Adult survival","Recruitment probability","Offspring mass"),lty=c(1,2,3),#
    col=c("black","black","blue"),bty="n",lwd=c(2,2,3))#
par(new=TRUE)#
plot(Nvals, z0vals,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="",xlim=c(146,430),#
     ylim=c(9,13),lwd=3,lty=3)#
axis(side=4,at=c(8:14))#
mtext("Offspring mean mass(kg)",side=4,line=-1.5,cex=1.1)     #
#
add_panel_label("a")#
pb_z(1,m.par.true);#
rc <- function(z1) c_z1z(z1,1,520,m.par.true) #
integrate(rc,-Inf,0.5)  #
z.max <- m.par.true["grow.int"]/(1-m.par.true["grow.z"])+3*m.par.true["grow.sd"]#
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.65,m.par.true) #
integrate(z1Dist,3.65,Inf) #
z1Dist <- function(z1) s_z(z1,0,m.par.true)*g_z1z(z1,3.8,m.par.true) #
integrate(z1Dist,3.8,Inf) #
#
L <- 0.5; U <- 3.8; #
m <- 165; #
lamFun <- function(Nt) {#
    IPM.dd <- mk_K(Nt, m, m.par.true, L=L, U=U)#
    return(Re(eigen(IPM.dd$K)$val[1]))#
}#
#
densVals <- seq(146, 416, length=100)#
lamVals <- sapply(densVals,lamFun) #
plot(densVals, lamVals, xlab="Number of Females N", #
ylab=expression(paste("Population growth rate ",lambda)),type="l")#
abline(h=1,lty=2)#
Nbar <- uniroot(function(N) lamFun(N)-1, lower=200,upper=400)$root#
points(Nbar,1,type="p",pch=16,cex=1.5)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/SoayDDFuns.eps")
imin
imax
imean
length(imin)
length(imax)
setwd("~/Repos/ipm_book/Rcode/c5")#
source("../utilities/Standard Graphical Pars.R")#
source("Soay DD Demog Funs.R")#
L <- 0.5; U <- 3.8; m <- 110; #
IPM.dd <- mk_K(Nt=350, m=m, m.par=m.par.true, L=L,U=U)#
meshpts <- IPM.dd$meshpts; h<-(U-L)/m;#
nbar <- Re(eigen(IPM.dd$K)$vectors[,1]); #
nbar = 350*nbar/sum(h*nbar); #
for(k in 1:50) {#
	IPM.dd <- mk_K(Nt=sum(h*nbar), m=m, m.par=m.par.true, L=L,U=U)#
	nbar <- IPM.dd$K%*%nbar#
}#
Nbar <- sum(h*nbar)#
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values[1]; cat(lam_J,"\n")#
pr_z <- function(Nt, m.par) {#
    linear.p <- m.par["recr.int"] + m.par["recr.Nt"] * Nt - rho*(Nt-Nbar)#
    1/(1+exp(-linear.p))#
}#
rho <- 0; #
J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
lam_J <- eigen(J)$values; cat(lam_J[1],"\n") #
rhovals <- seq(0,0.1,length=21); #
Revals <- Imvals <- matrix(0,21,5);#
Revals[1,] <- Re(lam_J[1:5]); Imvals[1,] <- Im(lam_J[1:5])#
for(j in 1:21) {#
	rho <- rhovals[j];#
	J <- mk_J(nbar=nbar, m=m, m.par=m.par.true, L=L, U=U, eps=0.01);#
    lam_J <- eigen(J)$values; cat(j, rhovals[j],lam_J[1], abs(lam_J[1]),"\n") #
    Revals[j,] <- Re(lam_J[1:5]); Imvals[j,] <- Im(lam_J[1:5])#
} #
Revals; Imvals; #
set_graph_pars("panel4")#
lam3 <- t(apply(Revals[,1:3],1,sort)); #
matplot(rhovals,lam3,type="l",lty=1,col="black",xlab="Steepness parameter rho",#
ylab="Eigenvalues");#
abline(h=-1,lty=2)#
for(j in 1:21) {#
	lamj <- lam3[j,];#
	imax <- which(abs(lamj)==max(abs(lamj)))#
	points(rhovals[j],lamj[imax])#
} #
add_panel_label("a")#
rho <- 0.04; #
nreps<-5; N0<-seq(150,400,length=nreps)#
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.04")#
add_panel_label("b")#
rho <- 0.08; #
Ntvals<-matrix(NA,21,nreps)#
for(j in 1:nreps) {#
	IPM.dd <- mk_K(Nt=N0[j], m=m, m.par=m.par.true, L=L,U=U)#
	nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
	nt <- N0[j]*nt/sum(h*nt); #
	Ntvals[1,j] <- sum(h*nt)#
	for(k in 2:21) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[k,j] <- sum(h*nt)#
	}#
}#
matplot(0:20,Ntvals,type="o",pch=1,col="black",lty=1,xlab="Year t",ylab="Total number of females")#
text(16,400,"rho=0.08")#
add_panel_label("c")#
if(FALSE) { #
rhovals <- seq(0.03,0.25,length=500); #
Ntvals<-matrix(NA,500,1000);#
m <- 50 #
for(j in 1:500) {#
	rho <- rhovals[j]; #
    IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
    nt <- Re(eigen(IPM.dd$K)$vectors[,1]);#
    nt <- 300*nt/sum(h*nt); #
    Ntvals[j,1] <- sum(h*nt)#
    for(k in 2:1000) {#
	   IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	   nt <- IPM.dd$K%*%nt#
	   Ntvals[j,k] <- sum(h*nt)#
	}#
	cat(j,"\n")#
}#
save(list=c("Ntvals","rhovals"),file="Ntvals.Rdata")#
} #
load(file="Ntvals.Rdata");#
matplot(rhovals,Ntvals[,901:1000],type="p",pch=".",col="black",#
xlab="Steepness parameter rho", ylab="Total population")#
add_panel_label("d")#
dev.copy2eps(file="../../c5/figures/SoayBif.eps")#
graphics.off(); #
dev.new(width=8,height=4)#
set_graph_pars("panel2")#
rho=0.2; m <- 110;  #
Nt<-numeric(1000); ntvals<-matrix(NA,1000,110); #
IPM.dd <- mk_K(Nt=300, m=m, m.par=m.par.true, L=L,U=U)#
nt <- Re(eigen(IPM.dd$K)$vectors[,1])#
nt <- 300*nt/sum(h*nt) #
Nt[1] <- sum(h*nt)#
ntvals[1,] <- nt; #
for(k in 2:1000) {#
	IPM.dd <- mk_K(Nt=sum(h*nt), m=m, m.par=m.par.true, L=L,U=U)#
	nt <- IPM.dd$K%*%nt#
	Nt[k] <- sum(h*nt)#
	ntvals[k,] <- nt; #
	cat(k,"\n")#
}#
plot(Nt[500:999],Nt[501:1000],cex=0.5,xlab="Total #females N(t)", ylab="Total #females N(t+1)")#
add_panel_label("a")#
Nt1<-Nt[501:1000]; nt1<-ntvals[501:1000,]#
imin <- which(Nt1 < min(Nt1) + 1)#
imax <- which(Nt1 > max(Nt1)-1)#
imean <- which( abs(Nt1-mean(Nt1))<1)#
for(j in 1:500) nt1[j,] <- nt1[j,]/sum(h*nt1[j,]) #
meshpts <- IPM.dd$meshpts#
par(yaxs="i")#
matplot(meshpts,t(nt1[imin,]), type="l",xlim=c(1.8,U),col="black",xlab="Size z", ylab="Relative frequency")#
matpoints(meshpts,t(nt1[imax,]), type="l",lty=2, xlim=c(1.8,U),col="red")#
matpoints(meshpts,t(nt1[imean,]), type="l",lty=3,xlim=c(1.8,U),col="blue")#
legend("topleft",bty="n",legend=c("min(17)","max(18)","mean(9)"),lty=c(1,2,3),col=c("black",#
			"red","blue"),lwd=2)#
add_panel_label("b")#
dev.copy2eps(file="../../c5/figures/Soay1D.eps")
plot(Nt1)
plot(Nt1[901:1000],type="b")
plot(Nt1[1:100],type="b")
plot(Nt1[1:50],type="b")
m.par.true
0.54+0.71*3-0.000642*250
0.54+0.71*3-0.000642*300
0.54+0.71*3-0.000642*350
0.54+0.71*3-0.000642
0.54+0.71*3-0.000642*0
0.54+0.71*3-0.000642*400
0.54+0.71*3.2-0.000642*400
0.54+0.71*3.5-0.000642*400
0.54+0.71*3.3-0.000642*400
0.54+0.71*3.3-0.000642*300
0.54+0.71*3.2-0.000642*300
0.54+0.71*3.2-0.000642*360
